{"version":3,"file":"static/js/947.7fae5c18.chunk.js","mappings":"qMAiDA,QA7CA,WACE,MAAM,QAAEA,IAAYC,EAAAA,EAAAA,OACbC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAYjC,OATAC,EAAAA,EAAAA,YAAU,KACRC,MAAM,sCAADC,OACmCP,EAAO,qBAAAO,OAJjC,qCAMXC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQR,EAAQQ,EAAKT,QAC1BU,OAAMC,GAASC,QAAQD,MAAM,SAAUA,IAAO,GAChD,CAACb,KAGFe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGd,EAAKgB,KAAIC,IACRJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEG,IAAG,kCAAAb,OAAoCY,EAAOE,cAC9CC,IAAKH,EAAOI,KACZC,MAAO,CAAEC,MAAO,UAElBR,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAOI,QACZN,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAOO,cAPJP,EAAOQ,eAa1B,C,uGCkDA,QAhFA,WAAyB,IAADC,EACtB,MAAM,QAAE5B,IAAYC,EAAAA,EAAAA,OACb4B,EAAOC,IAAY1B,EAAAA,EAAAA,UAAS,CAAC,IAC7B2B,EAASC,IAAc5B,EAAAA,EAAAA,UAAS,MAUvC,OAPAC,EAAAA,EAAAA,YAAU,KACRC,MAAM,sCAADC,OAAuCP,EAAO,aAAAO,OAHrC,qCAIXC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQmB,EAASnB,KACtBC,OAAMC,GAASC,QAAQD,MAAM,SAAUA,IAAO,GAChD,CAACb,KAGFe,EAAAA,EAAAA,MAAA,OAAKS,MAAO,CAAES,QAAS,QAASjB,SAAA,EAC9BC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,IAAGnB,SAAC,oBACbD,EAAAA,EAAAA,MAAA,OAAKS,MAAO,CAAEY,QAAS,OAAQC,aAAc,QAASrB,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OACEG,IAAG,kCAAAb,OAAoCsB,EAAMS,aAC7ChB,IAAKO,EAAMU,MACXf,MAAO,CAAEC,MAAO,MAAOe,YAAa,OAAQC,UAAW,WAEzD1B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAIS,MAAO,CAAEkB,WAAY,QAAS1B,SAAA,CAC/Ba,EAAMU,MAAM,KAAG,IAAII,KAAKd,EAAMe,cAAcC,cAAc,QAE7D9B,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAkC,GAArBa,EAAMiB,aAAkB,QACxC7B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIa,EAAMkB,YACV9B,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAgB,QAAhBY,EAAIC,EAAMmB,cAAM,IAAApB,OAAA,EAAZA,EAAcV,KAAI+B,GAASA,EAAM1B,OAAM2B,KAAK,cAGpDjC,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAE2B,YAAa,OAAQC,YAAa,UAC/CrC,EAAAA,EAAAA,MAAA,OAAKS,MAAO,CAAEa,aAAc,QAASrB,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CACHC,GAAE,WAAA5B,OAAaP,EAAO,SACtBqD,QAASA,IAAMrB,EAAW,QAAQhB,SACnC,YAIHC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CACHC,GAAE,WAAA5B,OAAaP,EAAO,YACtBqD,QAASA,IAAMrB,EAAW,WAAWhB,SACtC,qBAMPC,EAAAA,EAAAA,KAAA,MAAIO,MAAO,CAAE2B,YAAa,OAAQC,YAAa,UAC/CrC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACe,SAAZe,IAAsBd,EAAAA,EAAAA,KAACqC,EAAAA,QAAI,IACf,YAAZvB,IAAyBd,EAAAA,EAAAA,KAACsC,EAAAA,QAAO,SAI1C,C,6EC3BA,QArCA,WACE,MAAM,QAAEvD,IAAYC,EAAAA,EAAAA,OACbuD,EAASC,IAAcrD,EAAAA,EAAAA,UAAS,IAYvC,OATAC,EAAAA,EAAAA,YAAU,KACRC,MAAM,sCAADC,OACmCP,EAAO,qBAAAO,OAJjC,qCAMXC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQ8C,EAAW9C,EAAK+C,WAC7B9C,OAAMC,GAASC,QAAQD,MAAM,SAAUA,IAAO,GAChD,CAACb,KAGFe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHwC,EAAQtC,KAAIyC,IACX5C,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAK2C,EAAOC,UACZ3C,EAAAA,EAAAA,KAAA,KAAAD,SAAI2C,EAAOE,YAFHF,EAAOG,QAOzB,C","sources":["components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const API_KEY = '9575eabc48100e8f389b13813466e8e2';\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n    )\n      .then(response => response.json())\n      .then(data => setCast(data.cast))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Cast</h1>\n      <ul>\n        {cast.map(member => (\n          <li key={member.cast_id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${member.profile_path}`}\n              alt={member.name}\n              style={{ width: '10%' }}\n            />\n            <h2>{member.name}</h2>\n            <p>{member.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Cast from '../Cast/Cast.jsx';\nimport Reviews from '../Reviews/Reviews.jsx';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [section, setSection] = useState(null);\n  const API_KEY = '9575eabc48100e8f389b13813466e8e2';\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.json())\n      .then(data => setMovie(data))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div style={{ padding: '25px' }}>\n      <Link to=\"/\">‚Üê Go back</Link>\n      <div style={{ display: 'flex', marginBottom: '25px' }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n          style={{ width: '20%', marginRight: '20px', marginTop: '20px' }}\n        />\n        <div>\n          <h1 style={{ fontWeight: 'bold' }}>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </h1>\n          <p>User Score: {movie.vote_average * 10}%</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres?.map(genre => genre.name).join(' ')}</p>\n        </div>\n      </div>\n      <hr style={{ borderColor: 'gray', borderWidth: '2px' }} />\n      <div style={{ marginBottom: '25px' }}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link\n              to={`/movies/${movieId}/cast`}\n              onClick={() => setSection('cast')}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/movies/${movieId}/reviews`}\n              onClick={() => setSection('reviews')}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <hr style={{ borderColor: 'gray', borderWidth: '2px' }} />\n      <div>\n        {section === 'cast' && <Cast />}\n        {section === 'reviews' && <Reviews />}\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const API_KEY = '9575eabc48100e8f389b13813466e8e2';\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    )\n      .then(response => response.json())\n      .then(data => setReviews(data.results))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <h2>{review.author}</h2>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string,\n    })\n  ),\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","cast","setCast","useState","useEffect","fetch","concat","then","response","json","data","catch","error","console","_jsxs","children","_jsx","map","member","src","profile_path","alt","name","style","width","character","cast_id","_movie$genres","movie","setMovie","section","setSection","padding","Link","to","display","marginBottom","poster_path","title","marginRight","marginTop","fontWeight","Date","release_date","getFullYear","vote_average","overview","genres","genre","join","borderColor","borderWidth","onClick","Cast","Reviews","reviews","setReviews","results","review","author","content","id"],"sourceRoot":""}